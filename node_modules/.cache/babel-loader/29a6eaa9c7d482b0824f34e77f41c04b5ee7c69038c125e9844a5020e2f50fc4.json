{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\n// @ is an alias to /src\nimport HelloWorld from '@/components/HelloWorld.vue';\nimport * as THREE from 'three';\nexport default {\n  name: 'HomeView',\n  mounted() {\n    // 在 Vue 组件挂载后执行\n    this.init();\n  },\n  methods: {\n    init() {\n      const {\n        PI,\n        sin,\n        cos\n      } = Math;\n      const TAU = 2 * PI;\n      const fftSize = 2048;\n      const totalPoints = 4000;\n      const listener = new THREE.AudioListener();\n      const audio = new THREE.Audio(listener);\n\n      // 音频上传\n      document.querySelector(\"input\").addEventListener(\"change\", this.uploadAudio, false);\n\n      // 按钮事件\n      const buttons = document.querySelectorAll(\".btn\");\n      buttons.forEach((button, index) => button.addEventListener(\"click\", () => this.loadAudio(index)));\n\n      // 初始化 THREE.js 场景\n      this.setupScene();\n    },\n    setupScene() {\n      // 初始化 THREE.js 场景\n      const scene = new THREE.Scene();\n      const renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.domElement);\n      const camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.position.set(-0.09397456774197047, -2.5597086635726947, 24.420789670889008);\n      camera.rotation.set(0.10443543723052419, -0.003827152981119352, 0.0004011488708739715);\n      const uniforms = {\n        time: {\n          type: \"f\",\n          value: 0.0\n        },\n        step: {\n          type: \"f\",\n          value: 0.0\n        }\n      };\n      const params = {\n        exposure: 1,\n        bloomStrength: 0.9,\n        bloomThreshold: 0,\n        bloomRadius: 0.5\n      };\n      const composer = new THREE.EffectComposer(renderer);\n      const renderScene = new THREE.RenderPass(scene, camera);\n      composer.addPass(renderScene);\n\n      // 在此设置动画等\n      this.animate();\n    },\n    animate() {\n      // 动画循环，更新场景和渲染\n      requestAnimationFrame(this.animate);\n    },\n    loadAudio(i) {\n      // 加载音频\n      const files = [\"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/no_curator/Simon_Panrucker/Happy_Christmas_You_Guys/Simon_Panrucker_-_01_-_Snowflakes_Falling_Down.mp3\", \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/no_curator/Dott/This_Christmas/Dott_-_01_-_This_Christmas.mp3\"\n      // ...其他音乐文件\n      ];\n      const file = files[i];\n      const loader = new THREE.AudioLoader();\n      loader.load(file, function (buffer) {\n        audio.setBuffer(buffer);\n        audio.play();\n      });\n    },\n    uploadAudio(event) {\n      // 上传音频文件\n      const files = event.target.files;\n      const reader = new FileReader();\n      reader.onload = function (file) {\n        var arrayBuffer = file.target.result;\n        listener.context.decodeAudioData(arrayBuffer, function (audioBuffer) {\n          audio.setBuffer(audioBuffer);\n          audio.play();\n        });\n      };\n      reader.readAsArrayBuffer(files[0]);\n    }\n  },\n  components: {\n    HelloWorld\n  }\n};","map":{"version":3,"names":["HelloWorld","THREE","name","mounted","init","methods","PI","sin","cos","Math","TAU","fftSize","totalPoints","listener","AudioListener","audio","Audio","document","querySelector","addEventListener","uploadAudio","buttons","querySelectorAll","forEach","button","index","loadAudio","setupScene","scene","Scene","renderer","WebGLRenderer","antialias","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","body","appendChild","domElement","camera","PerspectiveCamera","position","set","rotation","uniforms","time","type","value","step","params","exposure","bloomStrength","bloomThreshold","bloomRadius","composer","EffectComposer","renderScene","RenderPass","addPass","animate","requestAnimationFrame","i","files","file","loader","AudioLoader","load","buffer","setBuffer","play","event","target","reader","FileReader","onload","arrayBuffer","result","context","decodeAudioData","audioBuffer","readAsArrayBuffer","components"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div id=\"overlay\">\n      <ul>\n        <li class=\"title\">请选择音乐</li>\n        <li>\n          <button class=\"btn\" id=\"btnA\" type=\"button\">\n            Snowflakes Falling Down by Simon Panrucker\n          </button>\n        </li>\n        <li><button class=\"btn\" id=\"btnB\" type=\"button\">This Christmas by Dott</button></li>\n        <li><button class=\"btn\" id=\"btnC\" type=\"button\">No room at the inn by TRG Banks</button></li>\n        <li><button class=\"btn\" id=\"btnD\" type=\"button\">Jingle Bell Swing by Mark Smeby</button></li>\n        <li class=\"separator\">或者</li>\n        <li>\n          <input type=\"file\" id=\"upload\" hidden />\n          <label for=\"upload\">Upload File</label>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport HelloWorld from '@/components/HelloWorld.vue'\nimport * as THREE from 'three';\nexport default {\n  name: 'HomeView',\n  mounted() {\n    // 在 Vue 组件挂载后执行\n    this.init();\n  },\n  methods: {\n    init() {\n      const { PI, sin, cos } = Math;\n      const TAU = 2 * PI;\n      const fftSize = 2048;\n      const totalPoints = 4000;\n      const listener = new THREE.AudioListener();\n      const audio = new THREE.Audio(listener);\n\n      // 音频上传\n      document.querySelector(\"input\").addEventListener(\"change\", this.uploadAudio, false);\n\n      // 按钮事件\n      const buttons = document.querySelectorAll(\".btn\");\n      buttons.forEach((button, index) =>\n        button.addEventListener(\"click\", () => this.loadAudio(index)));\n\n      // 初始化 THREE.js 场景\n      this.setupScene();\n    },\n\n    setupScene() {\n      // 初始化 THREE.js 场景\n      const scene = new THREE.Scene();\n      const renderer = new THREE.WebGLRenderer({ antialias: true });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.body.appendChild(renderer.domElement);\n\n      const camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.position.set(-0.09397456774197047, -2.5597086635726947, 24.420789670889008);\n      camera.rotation.set(0.10443543723052419, -0.003827152981119352, 0.0004011488708739715);\n\n      const uniforms = {\n        time: { type: \"f\", value: 0.0 },\n        step: { type: \"f\", value: 0.0 }\n      };\n\n      const params = {\n        exposure: 1,\n        bloomStrength: 0.9,\n        bloomThreshold: 0,\n        bloomRadius: 0.5\n      };\n\n      const composer = new THREE.EffectComposer(renderer);\n      const renderScene = new THREE.RenderPass(scene, camera);\n      composer.addPass(renderScene);\n\n      // 在此设置动画等\n      this.animate();\n    },\n\n    animate() {\n      // 动画循环，更新场景和渲染\n      requestAnimationFrame(this.animate);\n    },\n\n    loadAudio(i) {\n      // 加载音频\n      const files = [\n        \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/no_curator/Simon_Panrucker/Happy_Christmas_You_Guys/Simon_Panrucker_-_01_-_Snowflakes_Falling_Down.mp3\",\n        \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/no_curator/Dott/This_Christmas/Dott_-_01_-_This_Christmas.mp3\"\n        // ...其他音乐文件\n      ];\n\n      const file = files[i];\n      const loader = new THREE.AudioLoader();\n      loader.load(file, function (buffer) {\n        audio.setBuffer(buffer);\n        audio.play();\n      });\n    },\n\n    uploadAudio(event) {\n      // 上传音频文件\n      const files = event.target.files;\n      const reader = new FileReader();\n      reader.onload = function (file) {\n        var arrayBuffer = file.target.result;\n        listener.context.decodeAudioData(arrayBuffer, function (audioBuffer) {\n          audio.setBuffer(audioBuffer);\n          audio.play();\n        });\n      };\n      reader.readAsArrayBuffer(files[0]);\n    }\n  },\n  components: {\n    HelloWorld\n  }\n}\n</script>\n<style scoped>\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    height: 100vh;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: #161616;\n    color: #c5a880;\n    font-family: sans-serif;\n  }\n\n  label {\n    display: inline-block;\n    background-color: #161616;\n    padding: 16px;\n    border-radius: 0.3rem;\n    cursor: pointer;\n    margin-top: 1rem;\n    width: 300px;\n    border-radius: 10px;\n    border: 1px solid #c5a880;\n    text-align: center;\n  }\n\n  ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n  }\n\n  .btn {\n    background-color: #161616;\n    border-radius: 10px;\n    color: #c5a880;\n    border: 1px solid #c5a880;\n    padding: 16px;\n    width: 300px;\n    margin-bottom: 16px;\n    line-height: 1.5;\n    cursor: pointer;\n  }\n\n  .separator {\n    font-weight: bold;\n    text-align: center;\n    width: 300px;\n    margin: 16px 0px;\n    color: #a07676;\n  }\n\n  .title {\n    color: #a07676;\n    font-weight: bold;\n    font-size: 1.25rem;\n    margin-bottom: 16px;\n  }\n\n  .text-loading {\n    font-size: 2rem;\n  }\n</style>\n"],"mappings":";;AAwBA;AACA,OAAAA,UAAA;AACA,YAAAC,KAAA;AACA;EACAC,IAAA;EACAC,QAAA;IACA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAD,KAAA;MACA;QAAAE,EAAA;QAAAC,GAAA;QAAAC;MAAA,IAAAC,IAAA;MACA,MAAAC,GAAA,OAAAJ,EAAA;MACA,MAAAK,OAAA;MACA,MAAAC,WAAA;MACA,MAAAC,QAAA,OAAAZ,KAAA,CAAAa,aAAA;MACA,MAAAC,KAAA,OAAAd,KAAA,CAAAe,KAAA,CAAAH,QAAA;;MAEA;MACAI,QAAA,CAAAC,aAAA,UAAAC,gBAAA,gBAAAC,WAAA;;MAEA;MACA,MAAAC,OAAA,GAAAJ,QAAA,CAAAK,gBAAA;MACAD,OAAA,CAAAE,OAAA,EAAAC,MAAA,EAAAC,KAAA,KACAD,MAAA,CAAAL,gBAAA,qBAAAO,SAAA,CAAAD,KAAA;;MAEA;MACA,KAAAE,UAAA;IACA;IAEAA,WAAA;MACA;MACA,MAAAC,KAAA,OAAA3B,KAAA,CAAA4B,KAAA;MACA,MAAAC,QAAA,OAAA7B,KAAA,CAAA8B,aAAA;QAAAC,SAAA;MAAA;MACAF,QAAA,CAAAG,aAAA,CAAAC,MAAA,CAAAC,gBAAA;MACAL,QAAA,CAAAM,OAAA,CAAAF,MAAA,CAAAG,UAAA,EAAAH,MAAA,CAAAI,WAAA;MACArB,QAAA,CAAAsB,IAAA,CAAAC,WAAA,CAAAV,QAAA,CAAAW,UAAA;MAEA,MAAAC,MAAA,OAAAzC,KAAA,CAAA0C,iBAAA,KAAAT,MAAA,CAAAG,UAAA,GAAAH,MAAA,CAAAI,WAAA;MACAI,MAAA,CAAAE,QAAA,CAAAC,GAAA;MACAH,MAAA,CAAAI,QAAA,CAAAD,GAAA;MAEA,MAAAE,QAAA;QACAC,IAAA;UAAAC,IAAA;UAAAC,KAAA;QAAA;QACAC,IAAA;UAAAF,IAAA;UAAAC,KAAA;QAAA;MACA;MAEA,MAAAE,MAAA;QACAC,QAAA;QACAC,aAAA;QACAC,cAAA;QACAC,WAAA;MACA;MAEA,MAAAC,QAAA,OAAAxD,KAAA,CAAAyD,cAAA,CAAA5B,QAAA;MACA,MAAA6B,WAAA,OAAA1D,KAAA,CAAA2D,UAAA,CAAAhC,KAAA,EAAAc,MAAA;MACAe,QAAA,CAAAI,OAAA,CAAAF,WAAA;;MAEA;MACA,KAAAG,OAAA;IACA;IAEAA,QAAA;MACA;MACAC,qBAAA,MAAAD,OAAA;IACA;IAEApC,UAAAsC,CAAA;MACA;MACA,MAAAC,KAAA,IACA,gLACA;MACA;MAAA,CACA;MAEA,MAAAC,IAAA,GAAAD,KAAA,CAAAD,CAAA;MACA,MAAAG,MAAA,OAAAlE,KAAA,CAAAmE,WAAA;MACAD,MAAA,CAAAE,IAAA,CAAAH,IAAA,YAAAI,MAAA;QACAvD,KAAA,CAAAwD,SAAA,CAAAD,MAAA;QACAvD,KAAA,CAAAyD,IAAA;MACA;IACA;IAEApD,YAAAqD,KAAA;MACA;MACA,MAAAR,KAAA,GAAAQ,KAAA,CAAAC,MAAA,CAAAT,KAAA;MACA,MAAAU,MAAA,OAAAC,UAAA;MACAD,MAAA,CAAAE,MAAA,aAAAX,IAAA;QACA,IAAAY,WAAA,GAAAZ,IAAA,CAAAQ,MAAA,CAAAK,MAAA;QACAlE,QAAA,CAAAmE,OAAA,CAAAC,eAAA,CAAAH,WAAA,YAAAI,WAAA;UACAnE,KAAA,CAAAwD,SAAA,CAAAW,WAAA;UACAnE,KAAA,CAAAyD,IAAA;QACA;MACA;MACAG,MAAA,CAAAQ,iBAAA,CAAAlB,KAAA;IACA;EACA;EACAmB,UAAA;IACApF;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}