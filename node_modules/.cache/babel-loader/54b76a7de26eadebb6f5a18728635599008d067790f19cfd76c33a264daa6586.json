{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport * as THREE from 'three';\nimport music1 from '@/assets/thisisus.mp3'; // 使用别名导入资源，@ 通常指向 src\nexport default {\n  name: 'HomeView',\n  mounted() {\n    this.initScene();\n\n    // 动画循环\n    const animate = () => {\n      requestAnimationFrame(animate);\n      this.uniforms.time.value += 0.05;\n      this.renderer.render(this.scene, this.camera);\n    };\n    animate();\n  },\n  data() {\n    return {\n      loading: false,\n      buttonsVisible: true,\n      music: null,\n      musicList: [{\n        id: 1,\n        name: 'music1',\n        url: music1\n      }, {\n        id: 2,\n        name: 'music2',\n        url: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3'\n      }, {\n        id: 3,\n        name: 'music3',\n        url: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3'\n      }],\n      PI: Math.PI,\n      TAU: 2 * Math.PI,\n      scene: null,\n      camera: null,\n      renderer: null,\n      analyser: null,\n      step: 0,\n      uniforms: {\n        time: {\n          type: \"f\",\n          value: 0.0\n        },\n        step: {\n          type: \"f\",\n          value: 0.0\n        }\n      },\n      params: {\n        exposure: 1,\n        bloomStrength: 0.9,\n        bloomThreshold: 0,\n        bloomRadius: 0.5\n      },\n      composer: null,\n      fftSize: 2048,\n      totalPoints: 4000,\n      listener: null,\n      audio: null\n    };\n  },\n  methods: {\n    loadAudio(id) {\n      console.log('loadAudio', id);\n\n      // 确保 musicList 存在并且 id 合法\n      const file = this.musicList[id - 1]?.url;\n      if (!file) {\n        console.error('Invalid audio ID:', id);\n        return;\n      }\n      const loader = new THREE.AudioLoader();\n\n      // 使用箭头函数保留 `this` 的上下文\n      loader.load(file, buffer => {\n        if (!this.audio) {\n          console.error('Audio object not initialized!');\n          return;\n        }\n        this.audio.setBuffer(buffer);\n        this.audio.play();\n        // 初始化 AudioAnalyser\n        this.analyser = new THREE.AudioAnalyser(this.audio, this.fftSize);\n\n        // 调用 init 方法\n        this.init();\n      }, undefined,\n      // onProgress 可选回调\n      error => {\n        console.error('Audio loading error:', error);\n      });\n    },\n    init() {\n      this.buttonsVisible = false;\n    },\n    // 映射函数\n    map(value, sMin, sMax, dMin, dMax) {\n      return dMin + (value - sMin) / (sMax - sMin) * (dMax - dMin);\n    },\n    // 生成范围数组\n    range(n, m = 0) {\n      return Array(n).fill(m).map((_, j) => m + j);\n    },\n    // 随机数生成器\n    rand(max, min = 0) {\n      return min + Math.random() * (max - min);\n    },\n    randInt(max, min = 0) {\n      return Math.floor(min + Math.random() * (max - min));\n    },\n    randChoice(arr) {\n      return arr[this.randInt(arr.length)];\n    },\n    // 极坐标转换\n    polar(ang, r = 1) {\n      return [r * Math.cos(ang), r * Math.sin(ang)];\n    },\n    // 初始化Three.js场景\n    initScene() {\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      this.camera.position.z = 5;\n      this.renderer = new THREE.WebGLRenderer({\n        canvas: this.$refs.canvas\n      });\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.listener = new THREE.AudioListener();\n      this.audio = new THREE.Audio(this.listener);\n    }\n  },\n  components: {}\n};","map":{"version":3,"names":["THREE","music1","name","mounted","initScene","animate","requestAnimationFrame","uniforms","time","value","renderer","render","scene","camera","data","loading","buttonsVisible","music","musicList","id","url","PI","Math","TAU","analyser","step","type","params","exposure","bloomStrength","bloomThreshold","bloomRadius","composer","fftSize","totalPoints","listener","audio","methods","loadAudio","console","log","file","error","loader","AudioLoader","load","buffer","setBuffer","play","AudioAnalyser","init","undefined","map","sMin","sMax","dMin","dMax","range","n","m","Array","fill","_","j","rand","max","min","random","randInt","floor","randChoice","arr","length","polar","ang","r","cos","sin","Scene","PerspectiveCamera","window","innerWidth","innerHeight","position","z","WebGLRenderer","canvas","$refs","setSize","AudioListener","Audio","components"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <div v-if=\"buttonsVisible\">\n      <!-- <h1>请宝宝选择一个音乐！</h1> -->\n      <el-button v-for=\"item in musicList\" :key=\"item.id\" @click=\"loadAudio(item.id)\" type=\"primary\">{{ item.name\n        }}</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport * as THREE from 'three';\nimport music1 from '@/assets/thisisus.mp3'; // 使用别名导入资源，@ 通常指向 src\nexport default {\n  name: 'HomeView',\n  mounted() {\n    this.initScene();\n\n    // 动画循环\n    const animate = () => {\n      requestAnimationFrame(animate);\n      this.uniforms.time.value += 0.05;\n      this.renderer.render(this.scene, this.camera);\n    };\n\n    animate();\n  },\n  data() {\n    return {\n      loading: false,\n      buttonsVisible: true,\n      music: null,\n      musicList: [\n        {\n          id: 1,\n          name: 'music1',\n          url: music1\n        },\n        {\n          id: 2,\n          name: 'music2',\n          url: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3'\n        },\n        {\n          id: 3,\n          name: 'music3',\n          url: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3'\n        }\n      ],\n      PI: Math.PI,\n      TAU: 2 * Math.PI,\n      scene: null,\n      camera: null,\n      renderer: null,\n      analyser: null,\n      step: 0,\n      uniforms: {\n        time: { type: \"f\", value: 0.0 },\n        step: { type: \"f\", value: 0.0 },\n      },\n      params: {\n        exposure: 1,\n        bloomStrength: 0.9,\n        bloomThreshold: 0,\n        bloomRadius: 0.5,\n      },\n      composer: null,\n      fftSize: 2048,\n      totalPoints: 4000,\n      listener: null,\n      audio: null,\n\n    }\n  },\n  methods: {\n    loadAudio(id) {\n      console.log('loadAudio', id);\n\n      // 确保 musicList 存在并且 id 合法\n      const file = this.musicList[id - 1]?.url;\n      if (!file) {\n        console.error('Invalid audio ID:', id);\n        return;\n      }\n\n      const loader = new THREE.AudioLoader();\n\n      // 使用箭头函数保留 `this` 的上下文\n      loader.load(\n        file,\n        (buffer) => {\n          if (!this.audio) {\n            console.error('Audio object not initialized!');\n            return;\n          }\n          this.audio.setBuffer(buffer);\n          this.audio.play();\n          // 初始化 AudioAnalyser\n          this.analyser = new THREE.AudioAnalyser(this.audio, this.fftSize);\n\n          // 调用 init 方法\n          this.init();\n        },\n        undefined, // onProgress 可选回调\n        (error) => {\n          console.error('Audio loading error:', error);\n        }\n      );\n    },\n    init() {\n      this.buttonsVisible = false\n    },\n    // 映射函数\n    map(value, sMin, sMax, dMin, dMax) {\n      return dMin + ((value - sMin) / (sMax - sMin)) * (dMax - dMin);\n    },\n    // 生成范围数组\n    range(n, m = 0) {\n      return Array(n)\n        .fill(m)\n        .map((_, j) => m + j);\n    },\n    // 随机数生成器\n    rand(max, min = 0) {\n      return min + Math.random() * (max - min);\n    },\n    randInt(max, min = 0) {\n      return Math.floor(min + Math.random() * (max - min));\n    },\n    randChoice(arr) {\n      return arr[this.randInt(arr.length)];\n    },\n    // 极坐标转换\n    polar(ang, r = 1) {\n      return [r * Math.cos(ang), r * Math.sin(ang)];\n    },\n    // 初始化Three.js场景\n    initScene() {\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(\n        75,\n        window.innerWidth / window.innerHeight,\n        0.1,\n        1000\n      );\n      this.camera.position.z = 5;\n\n      this.renderer = new THREE.WebGLRenderer({ canvas: this.$refs.canvas });\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n\n      this.listener = new THREE.AudioListener();\n      this.audio = new THREE.Audio(this.listener);\n    }\n  },\n  components: {\n\n  }\n}\n</script>\n<style scoped>\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  height: 100vh;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #161616;\n  color: #c5a880;\n  font-family: sans-serif;\n}\n\nlabel {\n  display: inline-block;\n  background-color: #161616;\n  padding: 16px;\n  border-radius: 0.3rem;\n  cursor: pointer;\n  margin-top: 1rem;\n  width: 300px;\n  border-radius: 10px;\n  border: 1px solid #c5a880;\n  text-align: center;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n}\n\n.btn {\n  background-color: #161616;\n  border-radius: 10px;\n  color: #c5a880;\n  border: 1px solid #c5a880;\n  padding: 16px;\n  width: 300px;\n  margin-bottom: 16px;\n  line-height: 1.5;\n  cursor: pointer;\n}\n\n.separator {\n  font-weight: bold;\n  text-align: center;\n  width: 300px;\n  margin: 16px 0px;\n  color: #a07676;\n}\n\n.title {\n  color: #a07676;\n  font-weight: bold;\n  font-size: 1.25rem;\n  margin-bottom: 16px;\n}\n\n.text-loading {\n  font-size: 2rem;\n}\n</style>\n"],"mappings":";AAYA,YAAAA,KAAA;AACA,OAAAC,MAAA;AACA;EACAC,IAAA;EACAC,QAAA;IACA,KAAAC,SAAA;;IAEA;IACA,MAAAC,OAAA,GAAAA,CAAA;MACAC,qBAAA,CAAAD,OAAA;MACA,KAAAE,QAAA,CAAAC,IAAA,CAAAC,KAAA;MACA,KAAAC,QAAA,CAAAC,MAAA,MAAAC,KAAA,OAAAC,MAAA;IACA;IAEAR,OAAA;EACA;EACAS,KAAA;IACA;MACAC,OAAA;MACAC,cAAA;MACAC,KAAA;MACAC,SAAA,GACA;QACAC,EAAA;QACAjB,IAAA;QACAkB,GAAA,EAAAnB;MACA,GACA;QACAkB,EAAA;QACAjB,IAAA;QACAkB,GAAA;MACA,GACA;QACAD,EAAA;QACAjB,IAAA;QACAkB,GAAA;MACA,EACA;MACAC,EAAA,EAAAC,IAAA,CAAAD,EAAA;MACAE,GAAA,MAAAD,IAAA,CAAAD,EAAA;MACAT,KAAA;MACAC,MAAA;MACAH,QAAA;MACAc,QAAA;MACAC,IAAA;MACAlB,QAAA;QACAC,IAAA;UAAAkB,IAAA;UAAAjB,KAAA;QAAA;QACAgB,IAAA;UAAAC,IAAA;UAAAjB,KAAA;QAAA;MACA;MACAkB,MAAA;QACAC,QAAA;QACAC,aAAA;QACAC,cAAA;QACAC,WAAA;MACA;MACAC,QAAA;MACAC,OAAA;MACAC,WAAA;MACAC,QAAA;MACAC,KAAA;IAEA;EACA;EACAC,OAAA;IACAC,UAAAnB,EAAA;MACAoB,OAAA,CAAAC,GAAA,cAAArB,EAAA;;MAEA;MACA,MAAAsB,IAAA,QAAAvB,SAAA,CAAAC,EAAA,OAAAC,GAAA;MACA,KAAAqB,IAAA;QACAF,OAAA,CAAAG,KAAA,sBAAAvB,EAAA;QACA;MACA;MAEA,MAAAwB,MAAA,OAAA3C,KAAA,CAAA4C,WAAA;;MAEA;MACAD,MAAA,CAAAE,IAAA,CACAJ,IAAA,EACAK,MAAA;QACA,UAAAV,KAAA;UACAG,OAAA,CAAAG,KAAA;UACA;QACA;QACA,KAAAN,KAAA,CAAAW,SAAA,CAAAD,MAAA;QACA,KAAAV,KAAA,CAAAY,IAAA;QACA;QACA,KAAAxB,QAAA,OAAAxB,KAAA,CAAAiD,aAAA,MAAAb,KAAA,OAAAH,OAAA;;QAEA;QACA,KAAAiB,IAAA;MACA,GACAC,SAAA;MAAA;MACAT,KAAA;QACAH,OAAA,CAAAG,KAAA,yBAAAA,KAAA;MACA,CACA;IACA;IACAQ,KAAA;MACA,KAAAlC,cAAA;IACA;IACA;IACAoC,IAAA3C,KAAA,EAAA4C,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;MACA,OAAAD,IAAA,IAAA9C,KAAA,GAAA4C,IAAA,KAAAC,IAAA,GAAAD,IAAA,KAAAG,IAAA,GAAAD,IAAA;IACA;IACA;IACAE,MAAAC,CAAA,EAAAC,CAAA;MACA,OAAAC,KAAA,CAAAF,CAAA,EACAG,IAAA,CAAAF,CAAA,EACAP,GAAA,EAAAU,CAAA,EAAAC,CAAA,KAAAJ,CAAA,GAAAI,CAAA;IACA;IACA;IACAC,KAAAC,GAAA,EAAAC,GAAA;MACA,OAAAA,GAAA,GAAA5C,IAAA,CAAA6C,MAAA,MAAAF,GAAA,GAAAC,GAAA;IACA;IACAE,QAAAH,GAAA,EAAAC,GAAA;MACA,OAAA5C,IAAA,CAAA+C,KAAA,CAAAH,GAAA,GAAA5C,IAAA,CAAA6C,MAAA,MAAAF,GAAA,GAAAC,GAAA;IACA;IACAI,WAAAC,GAAA;MACA,OAAAA,GAAA,MAAAH,OAAA,CAAAG,GAAA,CAAAC,MAAA;IACA;IACA;IACAC,MAAAC,GAAA,EAAAC,CAAA;MACA,QAAAA,CAAA,GAAArD,IAAA,CAAAsD,GAAA,CAAAF,GAAA,GAAAC,CAAA,GAAArD,IAAA,CAAAuD,GAAA,CAAAH,GAAA;IACA;IACA;IACAtE,UAAA;MACA,KAAAQ,KAAA,OAAAZ,KAAA,CAAA8E,KAAA;MACA,KAAAjE,MAAA,OAAAb,KAAA,CAAA+E,iBAAA,CACA,IACAC,MAAA,CAAAC,UAAA,GAAAD,MAAA,CAAAE,WAAA,EACA,KACA,IACA;MACA,KAAArE,MAAA,CAAAsE,QAAA,CAAAC,CAAA;MAEA,KAAA1E,QAAA,OAAAV,KAAA,CAAAqF,aAAA;QAAAC,MAAA,OAAAC,KAAA,CAAAD;MAAA;MACA,KAAA5E,QAAA,CAAA8E,OAAA,CAAAR,MAAA,CAAAC,UAAA,EAAAD,MAAA,CAAAE,WAAA;MAEA,KAAA/C,QAAA,OAAAnC,KAAA,CAAAyF,aAAA;MACA,KAAArD,KAAA,OAAApC,KAAA,CAAA0F,KAAA,MAAAvD,QAAA;IACA;EACA;EACAwD,UAAA,GAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}